# Generated by Django 4.2.14 on 2025-04-27 13:04

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ClientFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback",
                    models.TextField(
                        help_text="Provide detailed feedback about your session"
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "1 - Poor"),
                            (2, "2 - Fair"),
                            (3, "3 - Good"),
                            (4, "4 - Very Good"),
                            (5, "5 - Excellent"),
                        ],
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SessionNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField()),
                (
                    "session_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the therapy session occurred",
                        null=True,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-session_date", "-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="TherapistProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True)),
                ("specializations", models.JSONField(default=list)),
                ("education", models.JSONField(default=list)),
                ("experience", models.JSONField(default=list)),
                (
                    "years_of_experience",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                ("license_number", models.CharField(max_length=100, unique=True)),
                ("license_expiry", models.DateField()),
                (
                    "available_days",
                    models.JSONField(
                        default=dict,
                        help_text="Dictionary of available days and time slots",
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("profile_completion", models.FloatField(default=0)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("verification_notes", models.TextField(blank=True)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("verification_documents", models.JSONField(default=list)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="therapist_profile_pics/"
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("total_ratings", models.PositiveIntegerField(default=0)),
                ("total_sessions", models.PositiveIntegerField(default=0)),
                (
                    "languages",
                    models.JSONField(
                        default=list,
                        help_text="List of languages spoken by the therapist",
                    ),
                ),
                (
                    "therapy_types",
                    models.JSONField(
                        default=list, help_text="Types of therapy offered"
                    ),
                ),
                ("accepts_insurance", models.BooleanField(default=False)),
                (
                    "insurance_providers",
                    models.JSONField(
                        default=list, help_text="List of accepted insurance providers"
                    ),
                ),
                (
                    "session_duration",
                    models.JSONField(
                        default=list, help_text="Available session durations in minutes"
                    ),
                ),
            ],
        ),
    ]
