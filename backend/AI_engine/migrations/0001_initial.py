# Generated by Django 4.2.7 on 2025-04-27 19:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("analysis_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "mood_score",
                    models.FloatField(help_text="Aggregated mood score from -1 to 1"),
                ),
                (
                    "sentiment_score",
                    models.FloatField(
                        help_text="Journal content sentiment score from -1 to 1"
                    ),
                ),
                (
                    "dominant_emotions",
                    models.JSONField(
                        default=list, help_text="List of dominant emotions detected"
                    ),
                ),
                (
                    "topics_of_concern",
                    models.JSONField(
                        default=list, help_text="Key topics or concerns identified"
                    ),
                ),
                (
                    "suggested_activities",
                    models.JSONField(default=list, help_text="AI-suggested activities"),
                ),
                (
                    "risk_factors",
                    models.JSONField(
                        default=dict, help_text="Identified risk factors and levels"
                    ),
                ),
                (
                    "improvement_metrics",
                    models.JSONField(
                        default=dict, help_text="Metrics showing user's improvement"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-analysis_date"],
                "indexes": [
                    models.Index(
                        fields=["user", "-analysis_date"],
                        name="AI_engine_u_user_id_024de3_idx",
                    ),
                    models.Index(
                        fields=["mood_score"], name="AI_engine_u_mood_sc_066eec_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TherapyRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("coping_strategy", "Coping Strategy"),
                            ("activity_suggestion", "Activity Suggestion"),
                            ("resource_referral", "Resource Referral"),
                            ("intervention", "Intervention"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "recommendation_data",
                    models.JSONField(help_text="Structured recommendation data"),
                ),
                (
                    "context_data",
                    models.JSONField(
                        help_text="Context that triggered this recommendation"
                    ),
                ),
                ("is_implemented", models.BooleanField(default=False)),
                ("effectiveness_rating", models.IntegerField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"],
                        name="AI_engine_t_user_id_c48195_idx",
                    ),
                    models.Index(
                        fields=["recommendation_type"],
                        name="AI_engine_t_recomme_e1f9f6_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AIInsight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "insight_type",
                    models.CharField(
                        choices=[
                            ("mood_pattern", "Mood Pattern"),
                            ("behavioral_change", "Behavioral Change"),
                            ("journal_theme", "Journal Theme"),
                            ("activity_impact", "Activity Impact"),
                            ("risk_alert", "Risk Alert"),
                        ],
                        max_length=50,
                    ),
                ),
                ("insight_data", models.JSONField(help_text="Structured insight data")),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("is_addressed", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at", "-priority"],
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"],
                        name="AI_engine_a_user_id_4a66f1_idx",
                    ),
                    models.Index(
                        fields=["insight_type", "priority"],
                        name="AI_engine_a_insight_7d7e84_idx",
                    ),
                ],
            },
        ),
    ]
